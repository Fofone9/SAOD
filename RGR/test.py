import matplotlib.pyplot as plt
import networkx as nx


def searchPath(gr, current, visited, size, count):
    if len(visited) == size and gr[current][visited[0]] == 1:
        count+=1
        visited.append(visited[0])
        # print(visited)
        visited.pop()
        return count
    for i in range(size):
        if gr[current][i] == 1 and i not in visited:
            visited.append(i)
            count += 1
            count = searchPath(gr, i, visited, size, count)
            visited.pop()
    return count




# graf = [[0,1,0,1],
#         [1,0,1,0],
#         [0,1,0,1],
#         [1,0,1,0]]

# graf = [[0,1,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
#         [1,0,1,0,0,1,0,0,0,0,0,0,0,0,0,0],
#         [0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0],
#         [0,0,1,0,0,0,0,1,0,0,0,0,0,0,0,0],
#         [1,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0],
#         [0,1,0,0,1,0,1,0,0,1,0,0,0,0,0,0],
#         [0,0,1,0,0,1,0,1,0,0,1,0,0,0,0,0],
#         [0,0,0,1,0,0,1,0,0,0,0,1,0,0,0,0],
#         [0,0,0,0,1,0,0,0,0,1,0,0,1,0,0,0],
#         [0,0,0,0,0,1,0,0,1,0,1,0,0,1,0,0],
#         [0,0,0,0,0,0,1,0,0,1,0,1,0,0,1,0],
#         [0,0,0,0,0,0,0,1,0,0,1,0,0,0,0,1],
#         [0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0],
#         [0,0,0,0,0,0,0,0,0,1,0,0,1,0,1,0],
#         [0,0,0,0,0,0,0,0,0,0,1,0,0,1,0,1],
#         [0,0,0,0,0,0,0,0,0,0,0,1,0,0,1,0]]

# graf = [[0,1,0,0,0,1,0,1,0],
#         [1,0,1,0,0,0,0,1,0],
#         [0,1,0,1,0,0,0,0,0],
#         [0,0,1,0,1,0,0,0,0],
#         [0,0,0,1,0,1,0,0,1],
#         [1,0,0,0,1,0,1,0,0],
#         [0,0,0,0,0,1,0,1,1],
#         [1,1,0,0,0,0,1,0,0],
#         [0,0,0,0,1,0,1,0,0]]
# graf = [
#     [0,1,1,0,0,0],
#     [1,0,1,1,0,0],
#     [1,1,0,1,1,0],
#     [0,1,1,0,1,1],
#     [0,0,1,1,0,1],
#     [0,0,0,1,1,0]
# ]
# graf = [
#     [0,1,0,0,0,0,0,0,0,1,0,0],
#     [1,0,1,0,0,0,0,0,0,0,0,0],
#     [0,1,0,1,0,0,0,0,0,0,0,1],
#     [0,0,1,0,1,0,0,0,0,0,0,0],
#     [0,0,0,1,0,1,0,0,0,0,0,0],
#     [0,0,0,0,1,0,1,0,0,0,0,1],
#     [0,0,0,0,0,1,0,1,0,0,0,0],
#     [0,0,0,0,0,0,1,0,1,0,1,0],
#     [0,0,0,0,0,0,0,1,0,1,0,0],
#     [1,0,0,0,0,0,0,0,1,0,1,1],
#     [0,0,0,0,0,0,0,1,0,1,0,1],
#     [0,0,1,0,0,1,0,0,0,1,1,0]
# ]
# graf = [[0,1,0,0,1,0,0,0,0,0,0,0,0,0],
#         [1,0,1,0,0,1,0,0,0,0,0,0,1,0],
#         [0,1,0,1,0,0,1,0,0,0,0,0,0,0],
#         [0,0,1,0,1,0,0,1,0,0,0,0,0,0],
#         [1,0,0,1,0,1,0,0,1,0,0,0,0,0],
#         [0,1,0,0,1,0,1,0,0,1,0,0,0,0],
#         [0,0,1,0,0,1,0,1,0,0,0,0,0,0],
#         [0,0,0,1,0,0,1,0,1,0,0,0,0,0],
#         [0,0,0,0,1,0,0,1,0,1,0,0,0,0],
#         [0,0,0,0,0,1,0,0,1,0,1,0,0,0],
#         [0,0,0,0,0,0,0,0,0,1,0,1,0,0],
#         [0,0,0,0,0,0,0,0,0,0,1,0,1,0],
#         [0,1,0,0,0,0,0,0,0,0,0,1,0,1],
#         [1,0,0,0,0,0,0,0,0,0,0,0,1,0]]
# size = len(graf)
# count = 1
# for i in range(size):
#      count = searchPath(graf, i, [i], size,count)
# print(count)

def fac(x):
    num = 1
    for i in range(1,x+1):
        num = num*i
    return num
x = [6,7,8,9,10]
y = [2671,18733,149913,1349281,13492891]
plt.plot(x,y)
plt.plot(x, [3.7*fac(X) for X in x])
plt.show()
# for size in range(6, 17):
#     graf = list()
#     for i in range(size):
#         line = list()
#         for j in range(size):
#             if i != j: line.append(1)
#             else: line.append(0)
#         graf.append(line)
#     count = 1
#     for i in range(size):
#         count = searchPath(graf, i, [i], size, count)
#     print(size, count)